CHANGELOG
=========

4.0.0rc3 (June 2019)
    - refactor thread info

4.0.0rc2 (June 2019)
    - refactor server info (so it has not to be in every request)
    - make it Python3.5 friendly, and added tests to Travis for Debian Stretch stock python
    - refactor run_server: make it more C rather than Python C-API
    - Minor Travis docker improvements

4.0.0rc1 (June 2019)
    - added Travis CI support
    - added legacy benchmarks
    - removed server level logs to improve performance
    - Backport 3.0.1 commits where applicable
    - Added tcp_nodelay, max_body_len, max_header_fields, max_header_field_len, max_uri_len, max_query_len to make
    DoS attacks less feasible
    - Refactor python code
    - Better HTTP compliant error codes
    - Added 505 HTTP Version Not Supported on HTTP2
    - Improvements in C logging
    - Refactor runner so args and kwrags are well known
    - Improvements on sock configuration, like TCP NODELAY and KEEPALIVE
    - Fix several issues calling the gworker.BjoernWorker with gunicorn
    - Added benchmarks for gunicorn worker
    - Fix bad import when building from source externally with setup.py
    - configurable listen backlog, defaulted to the half of /proc/sys/net/core/somaxconn, if listen_backlog para is 0, to
      the max of the underlying hardware/runtime
    - Fixed benchmarks
    - Fixed file logging
    - use http_parser.h methods for BAD_REQUEST, REQUIRED_LENGTH and SERVER_ERROR
    - Fix when to raise HTTP_STATUS_REQUIRED_LENGTH(411)
    - allow separated file logger from console logger
    - added gunicorn worker
    - gross refactor of tests and main module
    - increased default backlog
    - Added tests
    - Tests passing on Py37
    - Added benchmarks with image input
    - Refactored Makefile
    - Initial config for Py37
    - Fixed problems uploading big POST bodies
    - Fork from master@9884381ffdbc279fbf1ef640003fcce0a6f0996a
    - Drop support for Python2, supporting only Python3.6+
    - Updated to `http-parser` latest stable version 2.9.2
    - Tested on Ubuntu18.04 with `libev` version 4.22
    - Added unit testing support with Pytest
    - Added tests for Flask, Falcon and Bottle
    - Replace in hand url parser by `http-parser.http_parser_url`
    - Added a Dockerfile and `run-dev` script to run development easily
    - Added modern `core-avx2` compilation options
    - Added wheel building support
    - Added Flask, Bottle and Falcon ab benchmarks
    - Added Black & iSort formatting for python files

3.0.1 (June 6, 2019)
    - Fix #158, #160: Correct string type for WSGI environ

3.0.0 (May 7, 2019)
    - Fix #91: Support for SIGTERM/SIGINT handling

2.2.3 (Oct 22, 2018)
    - Fix #144: Proper handling of EAGAIN/EINTR (Adam Bouhenguel)

2.2.2 (Aug 15, 2018)
    - Fix #138: Use Latin1 encoding for unicode strings
    - Fix #139: Never use chunked responses for HTTP 204 and 304

2.2.1 (June 4, 2018)
    - Fix #133: Segmentation fault with very long HTTP headers (@szabolcsbalogh)

2.2.0 (Mar 19, 2018)
    - Fix #130: filewrapper must work with any read()able object

2.1.0 (Mar 1, 2018)
    - Fix #128: Fix support for io.BytesIO and other pseudo-files
    - Fix sendfile on BSD and OSX

2.0.5 (Feb 14, 2018)
    - Fix #122: WSGI environ SERVER_PORT is now a str (Simon Biewald)
    - Fix #122: WSGI environ SERVER_{PORT,HOST} are now always set (Simon Biewald)
    - Fix #125: Missing GIL locking (@szabolcsbalogh)

2.0.4 (Nov 22, 2017)
    - Fix Python 2 segfault

2.0.3 (Nov 20, 2017)
    - Fix segfault with HTTP header (晏旭瑞)

2.0.2 (Nov 19, 2017)
    - Fix segfault with large HTTP header
    - Fix Python 3 unicode header handling

2.0.1 (Sep 1, 2017)
    - Fix setup.py and `bjoern.version` attribute

2.0.0 (Aug 31, 2017)
    - Python 3 support (Hua Yanghao, Isaiah Peng). Note that due to the size
      of this update, version 2.0.0 may be less stable than version 1.4.3.

1.4.3 (Apr 2016)
    - Fix #88: Infinite loop due to misuse of POSIX API

1.4.2 (Jan 2015)
    - CVE-2015-0219, see https://www.djangoproject.com/weblog/2015/jan/13/security/

1.4.1 (Aug 2014)
    - Fix FreeBSD build (Olivier Duchateau)

1.4 (Aug 2014)
    - Rewrite socket initialization/handling in Python. Makes it possible to
      run bjoern on ordinary Python `socket.socket` objects. (Jonas Haag)

1.3.4 (Sep 2013)
    - Fix version 1.3.3

1.3.3 (Sep 2013)
    - Support for SO_REUSEPORT (David Wilson, #69)

1.3.2 (June 2013)
    - FreeBSD (sendfile) support (Olivier Duchateu)

1.3.1 (Apr 2013)
    - Default to keep-alive for HTTP/1.1 connections (James Little, #51)

1.3 (Apr 2013)
    - Unix socket support (contributed by https://github.com/k3d3)
    - Restored OS X compatibility (contributed by Patrick Lucas)
    - Fixed 64bit compile errors
    - Fixed WSGI filewrapper suppotr (#57)
    - Tickets closed: #35, #36, #38, #40, #43, #44, #45, #49, #19, #59, #60, #57

1.2 (Apr 2011)
    - sendfile() support
    - Python 2.5 compatibility

1.1.1 (Feb 2011)
    - Fixed a severe memory leak: didn't release the bodies of HTTP requests

1.1 (Jan 2011)
    - Implemented HTTP/1.1 and 1.0 persistent connections as well as HTTP/1.1
      chunked responses
    - Added 'REMOTE_ADDR' (client's IP address) to the WSGI dictionary (#18)
    - Fixed a possible inifite loop. Thanks to Alexander Shigin for adivce and tests
    - Split 'bjoern.run' into '.listen' and '.run' while not breaking the old
      API (contributed by Sergey Shepelev)
    - Tickets closed: #10, #18, #21, #24, #26, #27, #28, #31

1.0 (Dec 2010)
    First release on PyPI
